#ifndef YYSTYPE_HEADER
#define YYSTYPE_HEADER
union KC_YYSTYPE {
    kc::nocasestring yt_nocasestring;
    kc::casestring yt_casestring;
    kc::real yt_real;
    kc::integer yt_integer;
    kc::voidptr yt_voidptr;
    kc::net yt_net;
    kc::netName yt_netName;
    kc::definitionsList yt_definitionsList;
    kc::definitions yt_definitions;
    kc::sort yt_sort;
    kc::type yt_type;
    kc::identList yt_identList;
    kc::idents yt_idents;
    kc::structTypeList yt_structTypeList;
    kc::structType yt_structType;
    kc::varOrArray yt_varOrArray;
    kc::arrayList yt_arrayList;
    kc::array yt_array;
    kc::function yt_function;
    kc::optFunctionParameters yt_optFunctionParameters;
    kc::functionParametersList yt_functionParametersList;
    kc::functionParameters yt_functionParameters;
    kc::constant yt_constant;
    kc::expression yt_expression;
    kc::expressionWithoutInitializer yt_expressionWithoutInitializer;
    kc::assignment yt_assignment;
    kc::incdecrement yt_incdecrement;
    kc::arithmetic yt_arithmetic;
    kc::arithmeticWithoutInitializer yt_arithmeticWithoutInitializer;
    kc::logical yt_logical;
    kc::logicalWithoutInitializer yt_logicalWithoutInitializer;
    kc::comparison yt_comparison;
    kc::comparisonWithoutInitializer yt_comparisonWithoutInitializer;
    kc::leftvalue yt_leftvalue;
    kc::other yt_other;
    kc::otherWithoutInitializer yt_otherWithoutInitializer;
    kc::initializerList yt_initializerList;
    kc::expressionListColon yt_expressionListColon;
    kc::places yt_places;
    kc::optSafe yt_optSafe;
    kc::optNumber yt_optNumber;
    kc::optType yt_optType;
    kc::place yt_place;
    kc::commaPlaces yt_commaPlaces;
    kc::morePlaces yt_morePlaces;
    kc::marking yt_marking;
    kc::markingList yt_markingList;
    kc::transition yt_transition;
    kc::fairness yt_fairness;
    kc::variable yt_variable;
    kc::varOrArrayList yt_varOrArrayList;
    kc::guard yt_guard;
    kc::optIdentExprList yt_optIdentExprList;
    kc::identExprList yt_identExprList;
    kc::block yt_block;
    kc::declarationOrStatement yt_declarationOrStatement;
    kc::declaration yt_declaration;
    kc::statement yt_statement;
    kc::ifStatement yt_ifStatement;
    kc::optElse yt_optElse;
    kc::switchCase yt_switchCase;
    kc::switchCaseList yt_switchCaseList;
};
#define YYSTYPE KC_YYSTYPE
#endif // YYSTYPE_HEADER
