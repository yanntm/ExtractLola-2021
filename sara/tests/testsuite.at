AT_INIT
AT_COLOR_TESTS

############################################################################
AT_BANNER([Basic Options])
############################################################################

AT_SETUP([Help output])
AT_CHECK([SARA --help],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP

AT_SETUP([Version output])
AT_CHECK([SARA --version],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP


############################################################################
AT_BANNER([Finding positive answers])
############################################################################

AT_SETUP([Moving 50 tokens])
AT_CHECK([cp TESTFILES/test1.sara TESTFILES/test1.owfn .])
AT_CHECK([SARA -i test1.sara -J],0,stdout,stderr)
AT_CHECK([GREP -q "sara: Problem 1: test1" stdout])
AT_CHECK([GREP -q "SOLUTION" stdout])
AT_CHECK([GREP -q "is_reachable" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

AT_SETUP([Hay-stack 1, x=5, y=2])
AT_CHECK([cp TESTFILES/test2.sara TESTFILES/test2.owfn .])
AT_CHECK([SARA -i test2.sara],0,stdout,stderr)
AT_CHECK([GREP -q "sara: Problem 1: test2" stdout])
AT_CHECK([GREP -q "SOLUTION" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

AT_SETUP([Backward loop])
AT_CHECK([cp TESTFILES/test5.sara TESTFILES/test5.owfn .])
AT_CHECK([SARA -i test5.sara],0,stdout,stderr)
AT_CHECK([GREP -q "sara: Problem 1: test5" stdout])
AT_CHECK([GREP -q "SOLUTION(13)" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

AT_SETUP([Shortest path failure])
AT_CHECK([cp TESTFILES/test6.sara TESTFILES/test6.owfn .])
AT_CHECK([SARA -i test6.sara],0,stdout,stderr)
AT_CHECK([GREP -q "sara: Problem 1: test6" stdout])
AT_CHECK([GREP -q "SOLUTION(29): b1 b2 b3 b4 c1 b1 b2 b3 b4 c1 b1 b2 b3 b4 c1 b1 b2 b3 b4 c1 b1 b2 b3 b4 c1 b1 b2 b3 b4" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

AT_SETUP([Delayed Token Removal 1])
AT_CHECK([cp TESTFILES/ce.sara TESTFILES/ce.owfn .])
AT_CHECK([SARA -i ce.sara],0,stdout,stderr)
AT_CHECK([GREP -q "SOLUTION(14): .. .. pq pq t2 qp" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

AT_SETUP([Remote T-Invariant])
AT_CHECK([cp TESTFILES/ce2.sara TESTFILES/ce2.owfn .])
AT_CHECK([SARA -i ce2.sara],0,stdout,stderr)
AT_CHECK([GREP -q "SOLUTION(9): t1 t4 t. t. t3 t0 t1 t2 t5" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

AT_SETUP([Delayed Token Removal 2])
AT_CHECK([cp TESTFILES/ce3.sara TESTFILES/ce3.owfn .])
AT_CHECK([SARA -i ce3.sara],0,stdout,stderr)
AT_CHECK([GREP -q "SOLUTION(8): t1 t2" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

AT_SETUP([Remote T-Invariant with intermediate token need])
AT_CHECK([cp TESTFILES/ce4.sara TESTFILES/ce4.owfn .])
AT_CHECK([SARA -i ce4.sara],0,stdout,stderr)
AT_CHECK([GREP -q "SOLUTION(5): t. t. t0" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

AT_SETUP([T-Invariant Chain])
AT_CHECK([cp TESTFILES/ce5.sara TESTFILES/ce5.owfn .])
AT_CHECK([SARA -i ce5.sara],0,stdout,stderr)
AT_CHECK([GREP -q "SOLUTION(13): t6 t. t. t. t. t. t0 t. t. t. t. t. t5" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

############################################################################
AT_BANNER([Finding multiple solutions])
############################################################################

AT_SETUP([Backward loop])
AT_CHECK([cp TESTFILES/test5.sara TESTFILES/test5.owfn .])
AT_CHECK([SARA -i test5.sara -C -v],0,stdout,stderr)
AT_CHECK([GREP -q "3 solutions" stdout])
AT_CHECK([GREP -q "SOLUTION(13):" stdout])
AT_CHECK([GREP -q "SOLUTION(14):" stdout])
AT_CHECK([GREP -q "SOLUTION(15):" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

AT_SETUP([Maximal search depth])
AT_CHECK([cp TESTFILES/test5.sara TESTFILES/test5.owfn .])
AT_CHECK([SARA -i test5.sara -M14 -C -v],0,stdout,stderr)
AT_CHECK([GREP -q "2 solutions" stdout])
AT_CHECK([GREP -q "SOLUTION(13):" stdout])
AT_CHECK([GREP -q "SOLUTION(14):" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

############################################################################
AT_BANNER([Finding infeasible marking equations])
############################################################################

AT_SETUP([Failing Hay-stack 2, x=100, y=20, marking])
AT_CHECK([cp TESTFILES/test10.sara TESTFILES/test10.owfn .])
AT_CHECK([SARA -i test10.sara -v],0,stdout,stderr)
AT_CHECK([GREP -q "1 job done, 0 in queue, 1 failure, 0 solutions" stdout])
AT_CHECK([GREP -q "INFEASIBLE: the marking equation is infeasible" stdout])
AT_CHECK([GREP -q "add p1:1 tokens to the initial marking" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

AT_SETUP([Empty loop 1])
AT_CHECK([cp TESTFILES/test12.sara TESTFILES/test3.owfn .])
AT_CHECK([SARA -i test12.sara -v],0,stdout,stderr)
AT_CHECK([GREP -q "1 job done, 0 in queue, 1 failure, 0 solutions" stdout])
AT_CHECK([GREP -q "INFEASIBLE: the marking equation is infeasible" stdout])
AT_CHECK([GREP -q "add p2:1 tokens to the initial marking and p3:1 tokens to the final marking" stdout])
AT_CHECK([GREP -q "is_unreachable" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

AT_SETUP([Self-contradicting final marking])
AT_CHECK([cp TESTFILES/test5b.sara TESTFILES/test5.owfn .])
AT_CHECK([SARA -i test5b.sara -v],0,stdout,stderr)
AT_CHECK([GREP -q "1 job done, 0 in queue, 1 failure, 0 solutions" stdout])
AT_CHECK([GREP -q "INFEASIBLE: the marking equation is infeasible" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

############################################################################
AT_BANNER([Finding infeasible T-invariants])
############################################################################

AT_SETUP([Empty loop 2])
AT_CHECK([cp TESTFILES/test3.sara TESTFILES/test3.owfn .])
AT_CHECK([SARA -i test3.sara -v -d2],0,stdout,stderr)
AT_CHECK([GREP -q "1 failure, 0 solutions" stdout])
AT_CHECK([GREP -q "INFEASIBLE: unable to borrow enough tokens via T-invariants" stdout])
AT_CHECK([GREP -q "<empty>" stdout])
AT_CHECK([GREP -q "1 more token on place p2:0 to fire transition t1" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

AT_SETUP([Connected circles])
AT_CHECK([cp TESTFILES/test4.sara TESTFILES/test4.owfn .])
AT_CHECK([SARA -i test4.sara -v],0,stdout,stderr)
AT_CHECK([GREP -q "1 failure, 0 solutions" stdout])
AT_CHECK([GREP -q "INFEASIBLE: unable to borrow enough tokens via T-invariants" stdout])
AT_CHECK([GREP -q "<empty>" stdout])
AT_CHECK([GREP -q "1 more token on place set {.2:0,.2:0} to fire a transition in {.1,.1}" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

AT_SETUP([Failing Hay-stack 2, x=4, y=2, added loop])
AT_CHECK([cp TESTFILES/test9.sara TESTFILES/test9.owfn .])
AT_CHECK([SARA -i test9.sara -v -d2],0,stdout,stderr)
#AT_CHECK([GREP -q "*** LOOKUP ***" stderr])
AT_CHECK([GREP -q "failures, 0 solutions" stdout])
AT_CHECK([GREP -q "INFEASIBLE: unable to borrow enough tokens via T-invariants" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

AT_SETUP([Failing Hay-stack 2 as above, break at 24])
AT_CHECK([cp TESTFILES/test9.sara TESTFILES/test9.owfn .])
AT_CHECK([SARA -i test9.sara -v -b24],0,stdout,stderr)
AT_CHECK([GREP -q "24 jobs done" stdout])
AT_CHECK([GREP -q "UNSOLVED" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

AT_SETUP([Immanent Deadlock])
AT_CHECK([cp TESTFILES/test16.sara TESTFILES/test16.owfn .])
AT_CHECK([SARA -i test16.sara -v],0,stdout,stderr)
AT_CHECK([GREP -q "jobs done" stdout])
AT_CHECK([GREP -q "INFEASIBLE: unable to borrow enough tokens via T-invariants" stdout])
AT_CHECK([GREP -q "0 solutions" stdout])
AT_CHECK([GREP -q "e1 e1 e1" stdout])
AT_CHECK([GREP -q "e2 e2 e2" stdout])
AT_CHECK([GREP -q "e. e. .. .. .. .. x." stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

############################################################################
AT_BANNER([Realizability])
############################################################################

AT_SETUP([Backward loop])
AT_CHECK([cp TESTFILES/test14.sara TESTFILES/test5.owfn .])
AT_CHECK([SARA -i test14.sara -v],0,stdout,stderr)
AT_CHECK([GREP -q "SOLUTION(20)" stdout])
AT_CHECK([GREP -q "SOLUTION(21)" stdout])
AT_CHECK([GREP -q "INFEASIBLE: the transition multiset is not realizable" stdout])
AT_CHECK([GREP -q "SOLUTION(3)" stdout])
AT_CHECK([GREP -q "After the firing sequence ..1 .1.:" stdout])
AT_CHECK([GREP -q "3 Solutions produced" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

############################################################################
AT_BANNER([Multiple Problems])
############################################################################

AT_SETUP([Semaphore])
AT_CHECK([cp TESTFILES/test15.sara TESTFILES/test15.owfn .])
AT_CHECK([SARA -i test15.sara -v],0,stdout,stderr)
AT_CHECK([GREP -q "INFEASIBLE: the marking equation is infeasible" stdout])
AT_CHECK([GREP -q "SOLUTION(2)" stdout])
AT_CHECK([GREP -q "1 Solution produced" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

AT_SETUP([Decreasing Ring 3])
AT_CHECK([cp TESTFILES/test11.sara TESTFILES/test11.owfn .])
AT_CHECK([SARA -i test11.sara -v],0,stdout,stderr)
AT_CHECK([GREP -q "INFEASIBLE: the marking equation is infeasible" stdout])
AT_CHECK([GREP -q "SOLUTION(3):" stdout])
AT_CHECK([GREP -q "SOLUTION(0):" stdout])
AT_CHECK([GREP -q "2 Solutions produced" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

AT_SETUP([Hay-stack 2, x=5n, y=2, 1<=n<=5])
AT_CHECK([cp TESTFILES/test7.sara TESTFILES/test7_*.owfn .])
AT_CHECK([SARA -i test7.sara -v],0,stdout,stderr)
AT_CHECK([GREP -q "5 Solutions produced" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

AT_SETUP([Garavel])
AT_CHECK([cp TESTFILES/garavel.llnet.sara TESTFILES/garavel.llnet .])
AT_CHECK([SARA -i garavel.llnet.sara -v],0,stdout,stderr)
AT_CHECK([GREP -q "776 Solutions produced" stdout])
AT_KEYWORDS(solver)
AT_CLEANUP

############################################################################
AT_BANNER([Multithreading])
############################################################################

AT_SETUP([Depth-First-Search])
AT_CHECK([cp TESTFILES/test8_3.sara TESTFILES/test8_3.owfn .])
AT_CHECK([SARA -i test8_3.sara -v -T1],0,stdout,stderr)
AT_CHECK([GREP -q "SOLUTION(112)" stdout])
AT_CHECK([GREP -q "1 Solution produced" stdout])
AT_KEYWORDS(threads)
AT_CLEANUP

AT_SETUP([Job Execution])
AT_CHECK([cp TESTFILES/MAPK320.sara TESTFILES/MAPK320.pnml .])
AT_CHECK([SARA -i MAPK320.sara -v -T3],0,stdout,stderr)
AT_CHECK([GREP -q "SOLUTION" stdout])
AT_KEYWORDS(threads)
AT_CLEANUP

############################################################################
AT_BANNER([Error checks])
############################################################################

AT_SETUP([Missing Problem File])
AT_CHECK([SARA -i test0.sara -v],1,stdout,stderr)
AT_CHECK([GREP -q "aborting ..01" stderr])
AT_KEYWORDS(error)
AT_CLEANUP

AT_SETUP([Missing Petri Net])
AT_CHECK([cp TESTFILES/test13.sara .])
AT_CHECK([SARA -i test13.sara -v],1,stdout,stderr)
AT_CHECK([GREP -q "aborting ..02" stderr])
AT_KEYWORDS(error)
AT_CLEANUP

AT_SETUP([Parser Error])
AT_CHECK([cp TESTFILES/test3.owfn .])
AT_CHECK([SARA -r test3.owfn -f"p3:1,p2>1" --lola],1,stdout,stderr)
AT_CHECK([GREP -q "aborting ..04" stderr])
AT_KEYWORDS(error)
AT_CLEANUP

AT_SETUP([Parser Error 2])
AT_CHECK([cp TESTFILES/test3.owfn .])
AT_CHECK([SARA -i test3.owfn],1,stdout,stderr)
AT_CHECK([GREP -q "aborting ..05" stderr])
AT_KEYWORDS(error)
AT_CLEANUP

############################################################################
AT_BANNER([Options])
############################################################################

AT_SETUP([Measuring Time])
AT_CHECK([cp TESTFILES/test1.sara TESTFILES/test1.owfn .])
AT_CHECK([SARA -i test1.sara -v -t],0,stdout,stderr)
AT_CHECK([GREP -q "Time" stdout])
AT_CHECK([GREP -q "seconds overall" stdout])
AT_KEYWORDS(options)
AT_CLEANUP

AT_SETUP([Debug mode])
AT_CHECK([cp TESTFILES/test8_1.sara TESTFILES/test8_1.owfn .])
AT_CHECK([SARA -i test8_1.sara -v -d3],0,stdout,stderr)
AT_CHECK([GREP -q "1 Solution produced" stdout])
AT_KEYWORDS(options)
AT_CLEANUP

AT_SETUP([Break])
AT_CHECK([cp TESTFILES/test8_1.sara TESTFILES/test8_1.owfn .])
AT_CHECK([SARA -i test8_1.sara -v -b1],0,stdout,stderr)
AT_CHECK([GREP -q "UNSOLVED: Result is indecisive due to a break" stdout])
AT_KEYWORDS(options)
AT_CLEANUP

AT_SETUP([Scapegoat])
AT_CHECK([cp TESTFILES/test8_1.sara TESTFILES/test8_1.owfn .])
AT_CHECK([SARA -i test8_1.sara -v -S],0,stdout,stderr)
AT_CHECK([GREP -q "1 Solution produced" stdout])
AT_KEYWORDS(options)
AT_CLEANUP

AT_SETUP([Witness Always])
AT_CHECK([cp TESTFILES/test8_2.sara TESTFILES/test8_2.owfn .])
AT_CHECK([SARA -i test8_2.sara -v -W],0,stdout,stderr)
AT_CHECK([GREP -q "backtrack" stdout])
AT_CHECK([GREP -q "1 Solution produced" stdout])
AT_KEYWORDS(options)
AT_CLEANUP

AT_SETUP([Force Print])
AT_CHECK([cp TESTFILES/test5.sara TESTFILES/test5.owfn .])
AT_CHECK([SARA -i test5.sara -v -C -P],0,stdout,stderr)
AT_CHECK([GREP -q "3 solutions" stdout])
AT_KEYWORDS(options)
AT_CLEANUP

AT_SETUP([Create .dot Output])
AT_CHECK([cp TESTFILES/test16.sara TESTFILES/test16.owfn .])
AT_CHECK([SARA -i test16.sara -s],0,stdout,stderr)
AT_CHECK([GREP -q "Petri net" test16_P1S3.dot])
AT_KEYWORDS(options)
AT_CLEANUP

AT_SETUP([Missing Options])
AT_CHECK([SARA],0,stdout,stderr)
AT_CHECK([GREP -q "Use options" stderr])
AT_KEYWORDS(options)
AT_CLEANUP

AT_SETUP([Wrong Options])
AT_CHECK([SARA --whatisthis],1,stdout,stderr)
AT_CHECK([GREP -q "unrecognized option" stderr])
AT_KEYWORDS(options)
AT_CLEANUP

AT_SETUP([Incremental Stubborn Sets])
AT_CHECK([cp TESTFILES/test8_3.sara TESTFILES/test8_3.owfn .])
AT_CHECK([SARA -i test8_3.sara -v -I],0,stdout,stderr)
AT_CHECK([GREP -q "1 Solution produced" stdout])
AT_KEYWORDS(options)
AT_CLEANUP

############################################################################
AT_BANNER([Creating Problems])
############################################################################

AT_SETUP([Quasi-Liveness])
AT_CHECK([cp TESTFILES/test2.owfn .])
AT_CHECK([SARA -q test2.owfn -p -v],0,stdout,stderr)
AT_CHECK([GREP -q "10 Solutions produced" stdout])
AT_KEYWORDS(creation)
AT_CLEANUP

AT_SETUP([Reachability])
AT_CHECK([cp TESTFILES/test3.owfn .])
AT_CHECK([SARA -r test3.owfn -f"p3:1,p2>1" -p -v],0,stdout,stderr)
AT_CHECK([GREP -q "1 failure, 0 solutions" stdout])
AT_CHECK([GREP -q "INFEASIBLE: unable to borrow enough tokens via T-invariants" stdout])
AT_CHECK([GREP -q "<empty>" stdout])
AT_CHECK([GREP -q "1 more token on place p2:0 to fire transition t1" stdout])
AT_KEYWORDS(creation)
AT_CLEANUP

AT_SETUP([Realizability])
AT_CHECK([cp TESTFILES/test2.owfn .])
AT_CHECK([SARA -R test2.owfn -f"a1:1,a2:1,b1:2,c1:2,d1:2" -p -v],0,stdout,stderr)
AT_CHECK([GREP -q "1 Solution produced" stdout])
AT_KEYWORDS(creation)
AT_CLEANUP

AT_SETUP([Reachability and Constraints])
AT_CHECK([cp TESTFILES/test2.owfn .])
AT_CHECK([SARA -r test2.owfn -f"COVER" -c"1o1+1o2>2" -c"i1-i2:0" -p -v],0,stdout,stderr)
AT_CHECK([GREP -q "1 Solution produced" stdout])
AT_KEYWORDS(creation)
AT_CLEANUP

